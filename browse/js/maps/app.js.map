{"version":3,"sources":["blogzinga.coffee","components/bloglist/bloglist.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["###\nApp Module\n###\nclass BlogzingaApp then constructor: -> return [\n  'ui.router'\n  'templates'\n  'bloglist'\n]\n\nclass BlogzingaConfiguration\n  constructor: ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) ->\n\n    # Disable caching for IE\n    $httpProvider.defaults.headers.get = {} unless $httpProvider.defaults.headers.get\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = '0'\n\n    $locationProvider\n    .html5Mode off\n\n    $urlRouterProvider\n    .otherwise '/blogzinga/list'\n\n    $stateProvider\n    .state 'bloggers',\n      abstract: true\n      url: '/blogzinga'\n      views:\n        'template':\n          templateUrl: 'components/home.html'\n\n\nangular.module('blogzinga', new BlogzingaApp())\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider', BlogzingaConfiguration])","###\nApp Module\n###\nclass BlogListApp then constructor: -> return [\n  'ui.router'\n  'templates'\n  'ab-base64'\n]\n\nclass BlogListConfiguration\n  constructor: ($stateProvider) ->\n\n    $stateProvider\n      .state 'bloggers.list',\n        url: '/list'\n        views:\n          '':\n            templateUrl: 'components/bloglist/list.html'\n            controller: 'blogListController'\n\n\nclass BlogList\n  constructor: ($scope, BlogListService, base64) ->\n    BlogListService.getBlogs().then (resp) ->\n      $scope.blogs = resp\n      #for blog in $scope.blogs\n      #  for author, i in blog.authors\n      #    blog['author_' + i] = author\n      #  for tag, i in blog.tags\n      #    blog['tag_' + i] = tag\n      return\n    \n    $scope.openUrl = (url) ->\n      window.open url\n      \n    $scope.filterByTag = (tag) ->\n      $scope.filterBlog = tag\n\n\n\nclass BlogListService\n  constructor: ($http, base64) ->\n    return {\n      getBlogs : () ->\n        $http.get('https://api.github.com/repos/cosenonjaviste/blogzinga/contents/blogs.json?ref=master').then (resp) ->\n          base64Content = resp.data.content\n          angular.fromJson base64.decode base64Content\n\n    }\n\nclass Join\n  constructor: ->\n    return (value) ->\n      value.join? ', '\n      \nclass RandomHeader\n  constructor: ->\n    return {\n      restrict: 'A'\n      link: ($scope, $element, $attrs) ->\n        classes = ['panel-primary', 'panel-success', 'panel-warning', 'panel-danger', 'panel-info']\n        \n        random = () ->\n          Math.floor Math.random() * (classes.length - 1);\n          \n        $element.parent().addClass classes[random()]\n        return\n    }\n    \nclass RandomLabel\n  constructor: ->\n    return {\n      restict: 'A',\n      link: ($scope, $element, $attrs) ->\n        classes = ['label-primary', 'label-success', 'label-warning', 'label-danger', 'label-info']\n\n        random = () ->\n          Math.floor Math.random() * (classes.length - 1);\n          \n        $element.addClass classes[random()]\n    }\n\n\n\nangular.module('bloglist', new BlogListApp())\n.config(['$stateProvider', BlogListConfiguration])\n.controller('blogListController', ['$scope', 'BlogListService', 'base64', BlogList])\n.factory('BlogListService', ['$http', 'base64', BlogListService])\n.filter('join', [Join])\n.directive('randomHeader', [RandomHeader])\n.directive('randomLabel', [RandomLabel])"],"sourceRoot":"/source/"}